#BlueJ class context
comment0.target=Personaje
comment0.text=\n\ Esta\ clase\ modela\ un\ personaje\ de\ un\ juego\ de\ rol.\n
comment1.params=nombre\ vida\ peso
comment1.target=Personaje(java.lang.String,\ java.lang.Integer,\ java.lang.Integer)
comment1.text=\n\ Crea\ un\ personaje\ con\ el\ nombre\ dado\ y\ configura\ los\n\ campos\ segun\ vida,\ MAX_VIDA\ y\ PESO_MAXIMO_BOLSA.\n\ \n\ El\ personaje\ se\ inicializa\ sin\ bolsa\ y\ con\ las\ manos\ vacias\n\ en\ la\ habitacion\ inicial\ del\ mapa\ (getInicio()).\n\ \n\ @param\ nombre\ El\ nombre\ del\ personje.\n\ @param\ vida\ El\ valor\ inicial\ y\ maximo\ de\ vida\ del\ personaje.\n\ @param\ peso\ El\ peso\ maximo\ que\ puede\ transportar\ el\ personaje.\n
comment10.params=
comment10.target=java.lang.String\ getNombre()
comment11.params=nombre
comment11.target=void\ setNombre(java.lang.String)
comment12.params=
comment12.target=java.lang.Integer\ getVida()
comment13.params=vida
comment13.target=void\ setVida(java.lang.Integer)
comment14.params=vida
comment14.target=void\ resetVida(java.lang.Integer)
comment15.params=
comment15.target=Elemento\ getElemento()
comment16.params=objeto
comment16.target=void\ setElemento(Elemento)
comment17.params=habitacion
comment17.target=void\ setHabitacion(Habitacion)
comment2.params=
comment2.target=void\ mirarAlrededor()
comment2.text=\n\ Imprime\ en\ pantalla\ la\ informacion\ sobre\ el\ lugar\n\ donde\ se\ encuentra.\n
comment3.params=direccion
comment3.target=void\ irHacia(Salida)
comment3.text=\n\ El\ personaje\ se\ mueve\ a\ la\ habitacion\ en\ la\ direccion\n\ indicada.\ Si\ la\ direccion\ no\ es\ valida,\ se\ queda\n\ donde\ estaba.\n\ \n\ @param\ direccion\ Direccion\ por\ donde\ salir\ de\ la\ habitacion\n
comment4.params=
comment4.target=void\ guardarElemento()
comment4.text=\n\ Guarda\ el\ elemento\ que\ tiene\ en\ sus\ manos\ en\ la\ bolsa,\ siempre\n\ y\ cuando\ haya\ lugar\ suficiente.\ \ Las\ manos\ quedan\ vacias\ (null).\n\ \n\ Si\ las\ manos\ estan\ vacias\ (null),\ mostrar\ "No\ hay\ elemento\n\ para\ agregar\ a\ la\ bolsa"\n\ \n\ Si\ no\ hay\ bolsa\ (null),\ mostrar\ "No\ hay\ bolsa"\n
comment5.params=nombre
comment5.target=void\ tomarElemento(java.lang.String)
comment5.text=\n\ Toma\ un\ elemento\ de\ la\ bolsa\ (getElemento)\ y\ lo\ pone\n\ en\ las\ manos\ del\ personaje.\n\ \n\ Si\ tiene\ un\ elemento\ en\ sus\ manos,\ imprimir\ "Manos\ ocupadas".\n\ \n\ Si\ no\ hay\ bolsa,\ imprimir\ "No\ hay\ bolsa"\n\ \n\ Si\ no\ existe\ el\ elemento\ se\ debe\ imprimir\n\ \ \ \ \ \ \ "No\ se\ cuenta\ con\ el\ <nombre>"\n\ donde\ <nombre>\ es\ el\ nombre\ del\ elemento\ buscado.\n\ \n\ @param\ nombre\ El\ elemento\ a\ tomar\ de\ la\ bolsa.\n
comment6.params=nombre
comment6.target=void\ recogerElemento(java.lang.String)
comment6.text=\n\ Toma\ de\ la\ habitacion\ el\ elemento\ indicado\ con\ sus\ manos.\ \n\ De\ ser\ necesario,\ debe\ guardar\ en\ la\ bolsa\ lo\ que\ tenga\n\ en\ sus\ manos.\n\n\ Si\ el\ elemento\ no\ existe,\ debe\ seguir\ sosteniendo\ el\n\ elemento\ que\ tenia\ en\ sus\ manos.\n\ \n\ @param\ nombre\ Nombre\ del\ objeto\ a\ recoger\ de\ la\ habitacion.\n
comment7.params=
comment7.target=void\ dejarElemento()
comment7.text=\n\ Deja\ en\ la\ habitacion\ el\ elemento\ que\ tiene\ en\ sus\ manos.\n\ Las\ manos\ quedan\ vacias\ (null).\n\ \n\ Si\ las\ manos\ estan\ vacias\ imprime\ el\ mensaje\:\n\ \ \ \ \ \ "No\ hay\ objeto\ para\ dejar"\n
comment8.params=bolsa
comment8.target=void\ setBolsa(Bolsa)
comment8.text=\n\ Establece\ la\ nueva\ bolsa\ para\ el\ personaje.\n\ \n\ @param\ bolsa\ La\ nueva\ bolsa\ del\ personaje.\n
comment9.params=
comment9.target=Bolsa\ getBolsa()
comment9.text=\n\ Devuelve\ la\ bolsa\ del\ personaje.\n\ \n\ @return\ La\ bolsa\ del\ personaje.\n
numComments=18
